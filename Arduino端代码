#include <SoftwareSerial.h>
#define NTD0 -1
#define NTD1 294
#define NTD2 330
#define NTD3 350
#define NTD4 393
#define NTD5 441
#define NTD6 495
#define NTD7 556

#define NTDL1 147
#define NTDL2 165
#define NTDL3 175
#define NTDL4 196
#define NTDL5 221
#define NTDL6 248
#define NTDL7 278

#define NTDH1 589
#define NTDH2 661
#define NTDH3 700
#define NTDH4 786
#define NTDH5 882
#define NTDH6 990
#define NTDH7 112
//列出全部D调的频率
#define WHOLE 1
#define HALF 0.5
#define QUARTER 0.25
#define EIGHTH 0.25
#define SIXTEENTH 0.625
//列出所有节拍
int tune0[] = {};
float durt0[]= {};
int tune1[] =  
{  
 NTD0,NTD0,NTD0,NTD6,NTD7,NTDH1,NTD7,NTDH1,NTDH3,NTD7,NTD7,NTD7,NTD3,NTD3,
 NTD6,NTD5,NTD6,NTDH1,NTD5,NTD5,NTD5,NTD3,NTD4,NTD3,NTD4,NTDH1,
 NTD3,NTD3,NTD0,NTDH1,NTDH1,NTDH1,NTD7,NTD4,NTD4,NTD7,NTD7,NTD7,NTD0,NTD6,NTD7,
 NTDH1,NTD7,NTDH1,NTDH3,NTD7,NTD7,NTD7,NTD3,NTD3,NTD6,NTD5,NTD6,NTDH1,
 NTD5,NTD5,NTD5,NTD2,NTD3,NTD4,NTDH1,NTD7,NTD7,NTDH1,NTDH1,NTDH2,NTDH2,NTDH3,NTDH1,NTDH1,NTDH1,
 NTDH1,NTD7,NTD6,NTD6,NTD7,NTD5,NTD6,NTD6,NTD6,NTDH1,NTDH2,NTDH3,NTDH2,NTDH3,NTDH5,
 NTDH2,NTDH2,NTDH2,NTD5,NTD5,NTDH1,NTD7,NTDH1,NTDH3,NTDH3,NTDH3,NTDH3,NTDH3,
 NTD6,NTD7,NTDH1,NTD7,NTDH2,NTDH2,NTDH1,NTD5,NTD5,NTD5,NTDH4,NTDH3,NTDH2,NTDH1,
 NTDH3,NTDH3,NTDH3,NTDH3,NTDH6,NTDH6,NTDH5,NTDH5,NTDH3,NTDH2,NTDH1,NTDH1,NTD0,NTDH1,
 NTDH2,NTDH1,NTDH2,NTDH2,NTDH5,NTDH3,NTDH3,NTDH3,NTDH3,NTDH6,NTDH6,NTDH5,NTDH5,
 NTDH3,NTDH2,NTDH1,NTDH1,NTD0,NTDH1,NTDH2,NTDH1,NTDH2,NTDH2,NTD7,NTD6,NTD6,NTD6,NTD6,NTD7
};

float durt1[]= 

{  
  1,1,1,0.5,0.5,     1+0.5,0.5,1,1,     1,1,1,0.5,0.5,
  1+0.5,0.5,1,1,     1,1,1,1,          1+0.5,0.5,1,1, 
  1,1,0.5,0.5,0.5,0.5,    1+0.5,0.5,1,1,     1,1,1,0.5,0.5,
  1+0.5,0.5,1,1,    1,1,1,0.5,0.5,     1+0.5,0.5,1,1,
  1,1,1,0.5,0.5,    1,0.5,0.25,0.25,0.25,0.5,    0.5,0.5,0.5,0.25,0.5,1,
  0.5,0.5,0.5,0.5,1,1,    1,1,1,0.5,0.5,    1+0.5,0.5,1,1,
  1,1,1,0.5,0.5,    1.5,0.5,1,1,    1,1,1,1,
  0.5,0.5,1,1,0.5,0.5,    1.5,0.25,0.5,1,    1,1,1,1,
  1,1,1,1,    1,1,1,1,    0.5,0.5,1,1,0.5,0.5,
  1,0.5,0.5,1,1,    1,1,1,1,    1,1,1,1,
  0.5,0.5,1,1,0.5,0.5,    1,0.5,0.25,0.5,1,    1,1,1,0.5,0.5
};
int length1;
int tune2[]=                 //根据简谱列出各频率
{
  NTD3,NTD3,NTD4,NTD5,NTD5,NTD4,NTD3,NTD2,
  NTD1,NTD1,NTD2,NTD3,NTD3,NTD2,NTD2,NTD3,NTD3,NTD4,NTD5,
  NTD5,NTD4,NTD3,NTD2,NTD1,NTD1,NTD2,NTD3,NTD2,NTD1,NTD1,
  NTD2,NTD2,NTD3,NTD1, NTD2,NTD3,NTD4,NTD3,NTD1,NTD2,NTD3,NTD4,NTD3,NTD2,
  NTD1,NTD2,NTDL5,NTD0, NTD3,NTD3,NTD4,NTD5, NTD5,NTD4,NTD3,NTD4,NTD2,
  NTD1,NTD1,NTD2,NTD3, NTD2,NTD1,NTD1
};
float durt2[]=                   //根据简谱列出各节拍
{
  1,1,1,1, 1,1,1,1, 1,1,1,1,
  1+0.5,0.5,1+1,  1,1,1,1, 1,1,1,1,
  1,1,1,1, 1+0.5,0.5,1+1,
  1,1,1,1, 1,0.5,0.5,1,1,
  1,0.5,0.5,1,1, 1,1,1,1,
  1,1,1,1,1,1,1,0.5,0.5,
  1,1,1,1,1+0.5,0.5,1+1,
};
int length2;
int tonePin=6;   //6号接口
int Tune1[]= {NTD1};
int Tune2[]= {NTD2};
int Tune3[]= {NTD3};
int Tune4[]= {NTD4};
int Tune5[]= {NTD5};
int Tune6[]= {NTD6};
int Tune7[]= {NTD7};
int Length;
String Tone;
String music;
String payload;

SoftwareSerial ESP_Serial(6, 7); //Tx,Rx

void setup() {
  Serial.begin(115200);
  ESP_Serial.begin(9600);
  pinMode(tonePin,OUTPUT);
  length1=sizeof(tune1)/sizeof(tune1[0]);   //计算长度
  length2=sizeof(tune2)/sizeof(tune2[0]);   
  Length=sizeof(Tune1)/sizeof(Tune1[0]); 
  delay(2000);
}
void loop() {
  while (ESP_Serial.available() > 0)
  {
   payload = ESP_Serial.readString();

    music = payload.substring(35, 36);
    Tone =payload.substring(60, 61);
    delay(10);
    Serial.println(payload);
    Serial.println(music);
    if(music=="0")
    {
      for(int x=0;x<length1;x++)//循环音符的次数
  {  
    tone(tonePin,tune0[x]);//此函数依次播放tune0序列

 delay(400*durt0[x]);//节拍

noTone(tonePin);//停止当前音符，进入下一音符

  } 
  delay(10000);
    }
    if(music=="1")
    {int i=0;
      if(i==0){for(int x=0;x<length1;x++)
  {  
    tone(tonePin,tune1[x]);

 delay(400*durt1[x]);

noTone(tonePin);

  }  i=1;}
  delay(10000);}}
  if(music=="2")
    {int i=0;
      if(i==0){for(int x=0;x<length1;x++)
  {  
    tone(tonePin,tune2[x]);

 delay(400*durt2[x]);

noTone(tonePin);

  }  i=1;}
  delay(10000);

  if(music=="-1")
  {  if(Tone=="1")
    {int i=0;
     if(i==0){for(int x=0;x<Length;x++)
  {      tone(tonePin,Tune1[x]);
    noTone(tonePin);
}  i=1;}}
  delay(10000);
  if(Tone=="2")
    {int i=0;
     if(i==0){for(int x=0;x<Length;x++)
  {      tone(tonePin,Tune2[x]);
    noTone(tonePin);
}  i=1;}}
  delay(10000);
  if(Tone=="3")
    {int i=0;
     if(i==0){for(int x=0;x<Length;x++)
  {      tone(tonePin,Tune3[x]);
    noTone(tonePin);
}  i=1;}}
  delay(10000);
  if(Tone=="4")
    {int i=0;
     if(i==0){for(int x=0;x<Length;x++)
  {      tone(tonePin,Tune4[x]);
    noTone(tonePin);
}  i=1;}}
  delay(10000);
  if(Tone=="5")
    {int i=0;
     if(i==0){for(int x=0;x<Length;x++)
  {      tone(tonePin,Tune5[x]);
    noTone(tonePin);
}  i=1;}}
  delay(10000);
  if(Tone=="6")
    {int i=0;
     if(i==0){for(int x=0;x<Length;x++)
  {      tone(tonePin,Tune6[x]);
    noTone(tonePin);
}  i=1;}}
  delay(10000);
  if(Tone=="7")
    {int i=0;
     if(i==0){for(int x=0;x<Length;x++)
  {      tone(tonePin,Tune7[x]);
    noTone(tonePin);
}  i=1;}}
  delay(10000);
    }
    }  
    }
